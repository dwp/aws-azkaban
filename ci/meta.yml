meta:
  plan:
    terraform-common-config:
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.terraform_repository))
            tag: ((dataworks.terraform_version))
        params:
          TF_INPUT: false
          TF_CLI_ARGS_apply: -lock-timeout=300s
          TF_CLI_ARGS_plan: -lock-timeout=300s
          TF_VAR_costcode: ((dataworks.costcode))
    terraform-bootstrap:
      task: terraform-bootstrap
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: dwpdigital/jinja-yaml-aws
            version: 0.0.19
            tag: 0.0.19
        run:
          path: sh
          args:
            - -exc
            - |
              python bootstrap_terraform.py
              cp terraform.tf ../terraform-bootstrap
              cp terraform.tfvars ../terraform-bootstrap
          dir: aws-azkaban
        inputs:
          - name: aws-azkaban
        outputs:
          - name: terraform-bootstrap
      params:
        AWS_REGION: eu-west-2
    terraform-apply:
      task: terraform-apply
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-bootstrap/terraform.tf .
              cp ../terraform-bootstrap/terraform.tfvars .
              terraform workspace show
              terraform init
              terraform plan -out terraform.plan
              terraform apply -auto-approve terraform.plan
          dir: aws-azkaban
          
        inputs:
          - name: aws-azkaban
          - name: terraform-bootstrap
    terraform-plan:
      task: terraform-plan
      .: (( inject meta.plan.terraform-common-config ))
      config:
        run:
          path: sh
          args:
            - -exc
            - |
              cp ../terraform-bootstrap/terraform.tf .
              cp ../terraform-bootstrap/terraform.tfvars .
              terraform workspace show
              terraform init
              terraform plan $DETAILED_EXITCODE
          dir: aws-azkaban
        inputs:
          - name: aws-azkaban
          - name: terraform-bootstrap
      params:
        DETAILED_EXITCODE: -detailed-exitcode
    rotate-mysql-master-password:
      task: rotate-mysql-master-password
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((dataworks.docker_awscli_repository))
            tag: ((dataworks.docker_awscli_version))
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
          AWS_REGION: ((dataworks.aws_region))
          AWS_DEFAULT_REGION: ((dataworks.aws_region))
        run:
          path: sh
          args:
            - -exc
            - |
              source /assume-role
              set +x
              pip install boto3
              ./rotate_rds_master_user_password_update_secrets_manager.py azkaban-database azkaban-master-rds-password
          dir: secrets-management
        inputs:
          - name: secrets-management

