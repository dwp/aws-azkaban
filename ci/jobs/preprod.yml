jobs:
  - name: preprod
    max_in_flight: 1
    plan:
      - get: aws-azkaban
        trigger: true
        passed:
          - integration
      - get: manage-mysql-user-release
        trigger: true
      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-apply ))
        params:
          TF_WORKSPACE: 'preprod'
      - .: (( inject meta.plan.terraform-plan ))
        params:
          TF_WORKSPACE: 'preprod'

  - name: rotate-mysql-password-master-preprod
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-mysql-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            DB_NAME: "azkaban-database"
            SECRET_ID: "azkaban-master-rds-password"
          inputs:
            - name: secrets-management

  - name: rotate-mysql-password-external-master-preprod
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-mysql-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            DB_NAME: "azkaban-external-database"
            SECRET_ID: "azkaban-external-master-rds-password"
          inputs:
            - name: secrets-management

  - name: rotate-azkaban-webserver-password-preprod
    plan:
      - .: (( inject meta.plan.rotate-azkaban-webserver-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            PARAM_NAME: "azkaban-webserver-rds-password"
            LAMBDA_NAME: "manage-azkaban-mysql-user"

  - name: rotate-azkaban-external-webserver-password-preprod
    plan:
      - .: (( inject meta.plan.rotate-azkaban-webserver-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            PARAM_NAME: "azkaban-external-webserver-rds-password"
            LAMBDA_NAME: "manage-azkaban-external-mysql-user"

  - name: rotate-azkaban-executor-password-preprod
    plan:
      - .: (( inject meta.plan.rotate-azkaban-executor-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: cycle-azkaban-containers-preprod
    plan:
      - get: aws-azkaban
        trigger: false
      - get: manage-mysql-user-release
        trigger: false
      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-output ))
        params:
          TF_WORKSPACE: 'preprod'
      - .: (( inject meta.plan.cycle-azkaban-containers ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
        ensure:
          .: (( inject meta.plan.terraform-apply ))
          params:
            TF_WORKSPACE: 'preprod'

  - name: rotate-azkaban-admin-password-preprod
    plan:
      - .: (( inject meta.plan.rotate-azkaban-admin-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            SECRET_ID: "/concourse/dataworks/workflow_manager"

  - name: rotate-azkaban-external-admin-password-preprod
    plan:
      - .: (( inject meta.plan.rotate-azkaban-admin-password ))
        config:
          params:
            AWS_ACC: ((aws_account.preprod))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci
            SECRET_ID: "/concourse/dataworks/workflow_manager/azkaban_external"
