jobs:
  - name: development
    max_in_flight: 1
    plan:
      - get: aws-azkaban
        trigger: true
      - get: manage-mysql-user-release
        trigger: true
      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-apply ))
      - .: (( inject meta.plan.terraform-plan ))
      
  - name: rotate-mysql-password-master-development
    plan:
      - get: secrets-management
        trigger: false
      - .: (( inject meta.plan.rotate-mysql-master-password ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
          inputs:
            - name: secrets-management

  - name: rotate-azkaban-webserver-password-development
    plan:
      - .: (( inject meta.plan.rotate-azkaban-webserver-password ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci

  - name: rotate-azkaban-executor-password-development
    plan:
      - .: (( inject meta.plan.rotate-azkaban-executor-password ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci

  - name: cycle-azkaban-containers-development
    plan:
      - get: aws-azkaban
        trigger: false
      - get: manage-mysql-user-release
        trigger: false
      - get: midnight-trigger
        trigger: true
      - .: (( inject meta.plan.terraform-bootstrap ))
      - .: (( inject meta.plan.terraform-output ))
      - .: (( inject meta.plan.cycle-azkaban-containers ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
        ensure:
          .: (( inject meta.plan.terraform-apply ))

  - name: rotate-azkaban-admin-password-development
    plan:
      - .: (( inject meta.plan.rotate-azkaban-admin-password ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
